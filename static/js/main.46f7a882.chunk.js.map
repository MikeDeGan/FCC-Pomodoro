{"version":3,"sources":["components/Pie.js","components/Settings.js","components/Controls.js","App.js","serviceWorker.js","index.js"],"names":["Pie","props","react_default","a","createElement","className","viewBox","style","animation","animationPlayState","concat","alarmState","r","cx","cy","strokeDasharray","circleTime","id","minDisplay","secDisplay","Settings","onClick","handleDecreaseBreak","breakLength","handleIncreaseBreak","handleDecreaseSession","sessionLength","handleIncreaseSession","type","checked","playSound","onChange","handlePlaySound","htmlFor","flash","handleFlash","Controls","handleStart","startButton","handleReset","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","secRemaining","timerState","timerType","bind","assertThisInitialized","playAnimation","animateLabel","setState","sLength","toString","pie","i","setTimeout","timerLabel","opacity","newTimerType","newSecRemaining","newCircleTime","_this$state","elem","document","getElementById","play","e","getElementsByClassName","eTimerLabel","_this2","timerID","setInterval","secs","switchTimerType","startTime","cTime","newMinDisplay","Math","floor","newSecDisplay","clearInterval","pause","load","components_Pie","components_Settings","components_Controls","src","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46f7a882.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pie = props => {\r\n  return (\r\n    <div className=\"pieholder\">\r\n      <svg\r\n        viewBox=\"0 0 64 64\"\r\n        className=\"pie\"\r\n        style={{\r\n          animation: 'flashShadow 0.1s linear infinite',\r\n          animationPlayState: `${props.alarmState}`\r\n        }}\r\n      >\r\n        <circle\r\n          r=\"25%\"\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          style={{\r\n            strokeDasharray: `${props.circleTime} 100.53088`\r\n          }}\r\n        />\r\n      </svg>\r\n      <span id=\"time-left\">\r\n        {props.minDisplay}:{props.secDisplay}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nPie.propTypes = {\r\n  alarmState: PropTypes.string.isRequired,\r\n  circleTime: PropTypes.number.isRequired,\r\n  minDisplay: PropTypes.string.isRequired,\r\n  secDisplay: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Pie;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Settings = props => {\r\n  return (\r\n    <div id=\"adjustments\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <span id=\"break-label\" className=\"col-6\">\r\n            Break Length\r\n          </span>\r\n          <span id=\"session-label\" className=\"col-6\">\r\n            Session Length\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <i\r\n              className=\"fas fa-minus d-inline plusminus\"\r\n              id=\"break-decrement\"\r\n              onClick={props.handleDecreaseBreak}\r\n            />\r\n            <div id=\"break-length\" className=\"d-inline\">\r\n              {props.breakLength}\r\n            </div>\r\n            <i\r\n              className=\"fas fa-plus d-inline plusminus\"\r\n              id=\"break-increment\"\r\n              onClick={props.handleIncreaseBreak}\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <i\r\n              className=\"fas fa-minus d-inline plusminus\"\r\n              id=\"session-decrement\"\r\n              onClick={props.handleDecreaseSession}\r\n            />\r\n            <div id=\"session-length\" className=\"d-inline\">\r\n              {props.sessionLength}\r\n            </div>\r\n            <i\r\n              className=\"fas fa-plus d-inline plusminus\"\r\n              id=\"session-increment\"\r\n              onClick={props.handleIncreaseSession}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"row options\">\r\n            <div className=\"col-6\">\r\n              <input\r\n                id=\"play-sound\"\r\n                type=\"checkbox\"\r\n                checked={props.playSound}\r\n                onChange={props.handlePlaySound}\r\n              />\r\n              <label htmlFor=\"play-sound\">Play Sound</label>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <input\r\n                id=\"flash\"\r\n                type=\"checkbox\"\r\n                checked={props.flash}\r\n                onChange={props.handleFlash}\r\n              />\r\n              <label htmlFor=\"flash\">Flash on Alarm</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSettings.propTypes = {\r\n  handleIncreaseBreak: PropTypes.func.isRequired,\r\n  breakLength: PropTypes.number.isRequired,\r\n  handleDecreaseBreak: PropTypes.func.isRequired,\r\n  handleIncreaseSession: PropTypes.func.isRequired,\r\n  sessionLength: PropTypes.number.isRequired,\r\n  handleDecreaseSession: PropTypes.func.isRequired,\r\n  playSound: PropTypes.bool.isRequired,\r\n  handlePlaySound: PropTypes.func.isRequired,\r\n  flash: PropTypes.bool.isRequired,\r\n  handleFlash: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Controls = props => {\r\n  return (\r\n    <div className=\"container button-holder\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <button\r\n            id=\"start_stop\"\r\n            className=\"btn-info\"\r\n            onClick={props.handleStart}\r\n          >\r\n            {props.startButton}\r\n          </button>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <button id=\"reset\" className=\"btn-info\" onClick={props.handleReset}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nControls.propTypes = {\r\n  handleStart: PropTypes.func.isRequired,\r\n  startButton: PropTypes.string.isRequired,\r\n  handleReset: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Controls;\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Pie from './components/Pie';\nimport Settings from './components/Settings';\nimport Controls from './components/Controls';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sessionLength: 25, //25\n      breakLength: 5, //5\n      secRemaining: 1500, //1500\n      circleTime: 0,\n      minDisplay: '25', //25\n      secDisplay: '00', //00\n      timerState: 'paused',\n      timerType: 'session',\n      alarmState: 'paused',\n      startButton: 'start',\n      playSound: true, //true\n      flash: true //true\n    };\n    this.handleIncreaseBreak = this.handleIncreaseBreak.bind(this);\n    this.handleDecreaseBreak = this.handleDecreaseBreak.bind(this);\n    this.handleIncreaseSession = this.handleIncreaseSession.bind(this);\n    this.handleDecreaseSession = this.handleDecreaseSession.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handlePlaySound = this.handlePlaySound.bind(this);\n    this.handleFlash = this.handleFlash.bind(this);\n    this.playAnimation = this.playAnimation.bind(this);\n    this.animateLabel = this.animateLabel.bind(this);\n  }\n\n  handlePlaySound() {\n    this.setState({ playSound: !this.state.playSound });\n  }\n\n  handleFlash() {\n    this.setState({ flash: !this.state.flash });\n  }\n\n  handleIncreaseBreak() {\n    let bLength = this.state.breakLength;\n    if (bLength > 59 || this.state.timerState === 'running') {\n      return;\n    }\n\n    this.setState({\n      breakLength: this.state.breakLength + 1\n    });\n  }\n\n  handleDecreaseBreak() {\n    let bLength = this.state.breakLength;\n    if (bLength === 1 || this.state.timerState === 'running') {\n      return;\n    }\n\n    this.setState({\n      breakLength: this.state.breakLength - 1\n    });\n  }\n\n  handleIncreaseSession() {\n    let sLength = this.state.sessionLength;\n    if (sLength > 59 || this.state.timerState === 'running') {\n      return;\n    }\n    sLength++;\n\n    this.setState({\n      sessionLength: sLength,\n      minDisplay: sLength < 10 ? '0' + sLength.toString() : sLength.toString(),\n      secDisplay: '00',\n      secRemaining: sLength * 60\n    });\n  }\n\n  handleDecreaseSession() {\n    let sLength = this.state.sessionLength;\n    if (sLength === 1 || this.state.timerState === 'running') {\n      return;\n    }\n    sLength--;\n\n    this.setState({\n      sessionLength: sLength,\n      minDisplay: sLength < 10 ? '0' + sLength.toString() : sLength.toString(),\n      secDisplay: '00',\n      secRemaining: sLength * 60\n    });\n  }\n\n  playAnimation(pie) {\n    //\n    //\n    for (let i = 50; i <= 1000; i += 100) {\n      setTimeout(() => {\n        pie.style = `box-shadow: 0px 0px 16px 16px rgb(238, 155, 2)`;\n      }, i);\n      setTimeout(() => {\n        pie.style = `box-shadow: 0px 0px 13px 13px rgb(2, 238, 238)`;\n      }, i + 50);\n    }\n  }\n\n  animateLabel(timerLabel) {\n    setTimeout(() => {\n      timerLabel.style.opacity = 1;\n    }, 500);\n  }\n\n  switchTimerType() {\n    let newTimerType;\n    let newSecRemaining;\n    let newCircleTime;\n    const { breakLength, sessionLength, timerType } = this.state;\n    const elem = document.getElementById('beep');\n    if (this.state.playSound) {\n      elem.play();\n    }\n    if (this.state.flash) {\n      let e = document.getElementsByClassName('pie');\n      this.playAnimation(e[0]);\n    }\n\n    let eTimerLabel = document.getElementById('timer-label');\n    eTimerLabel.style.opacity = 0;\n    this.animateLabel(eTimerLabel);\n\n    if (timerType === 'session') {\n      newTimerType = 'break';\n      newSecRemaining = breakLength * 60 + 1;\n      newCircleTime = 0;\n    } else {\n      newTimerType = 'session';\n      newSecRemaining = sessionLength * 60 + 1;\n      newCircleTime = 0;\n    }\n    // move timertype to the setTimeout line below to fade smoothly\n    // have to keep it here to pass the freeCodeCamp tests\n    this.setState({\n      timerType: newTimerType,\n      secRemaining: newSecRemaining,\n      secDisplay: '00',\n      circleTime: newCircleTime\n    });\n\n    //use this to fade the timer title smoothly\n    // setTimeout(() => {\n    //   this.setState({\n    //     timerType: newTimerType\n    //   });\n    // }, 500);\n  }\n\n  handleStart() {\n    if (this.state.timerState === 'running') {\n      this.setState({ timerState: 'paused', startButton: 'Start' });\n      return;\n    }\n    this.setState({ timerState: 'running', startButton: 'Pause' });\n    const timerID = setInterval(() => {\n      if (this.state.timerState === 'paused') {\n        clearInterval(timerID);\n        return;\n      }\n      const secs = this.state.secRemaining - 1;\n      if (secs < 1) {\n        this.switchTimerType();\n        return;\n      }\n      const startTime =\n        this.state.timerType === 'session'\n          ? this.state.sessionLength * 60\n          : this.state.breakLength * 60;\n      const cTime = (100.53088 / startTime) * (startTime - secs);\n\n      let newMinDisplay =\n        Math.floor(secs / 60) < 10\n          ? '0' + Math.floor(secs / 60).toString()\n          : Math.floor(secs / 60).toString();\n      let newSecDisplay =\n        secs % 60 < 10 ? '0' + (secs % 60).toString() : (secs % 60).toString();\n\n      this.setState({\n        secRemaining: secs,\n        minDisplay: newMinDisplay,\n        secDisplay: newSecDisplay,\n        circleTime: cTime\n      });\n    }, 1000);\n  }\n\n  handleReset() {\n    const elem = document.getElementById('beep');\n    elem.pause();\n    elem.load();\n\n    this.setState({\n      sessionLength: 25,\n      breakLength: 5,\n      secRemaining: 1500,\n      circleTime: 0,\n      minDisplay: '25',\n      secDisplay: '00',\n      timerState: 'paused',\n      timerType: 'session',\n      alarmState: 'paused',\n      startButton: 'Start',\n      playSound: true,\n      flash: true\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">FCC Pomodoro Project</header>\n        <div id=\"timer-label\">{this.state.timerType}</div>\n        <Pie\n          alarmState={this.state.alarmState}\n          circleTime={this.state.circleTime}\n          minDisplay={this.state.minDisplay}\n          secDisplay={this.state.secDisplay}\n        />\n\n        <Settings\n          handleIncreaseBreak={this.handleIncreaseBreak}\n          breakLength={this.state.breakLength}\n          handleDecreaseBreak={this.handleDecreaseBreak}\n          handleIncreaseSession={this.handleIncreaseSession}\n          sessionLength={this.state.sessionLength}\n          handleDecreaseSession={this.handleDecreaseSession}\n          playSound={this.state.playSound}\n          handlePlaySound={this.handlePlaySound}\n          flash={this.state.flash}\n          handleFlash={this.handleFlash}\n        />\n\n        <Controls\n          handleStart={this.handleStart}\n          startButton={this.state.startButton}\n          handleReset={this.handleReset}\n        />\n\n        <audio id=\"beep\">\n          <source\n            src=\"./sounds/service-bell_daniel_simion.mp3\"\n            type=\"audio/mp3\"\n          />\n          Your browser does not support the audio element.\n        </audio>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}